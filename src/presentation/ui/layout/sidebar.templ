package layout

import infraEnvs "github.com/speedianet/os/src/infra/envs"

type SidebarItem struct {
	Label             string
	Icon              string
	Link              string
	AdditionalClasses string
}

func sidebarItemsGetter(currentUrl string) []SidebarItem {
	sidebarItems := []SidebarItem{
		{Label: "Overview", Icon: "ph-speedometer", Link: "/_/#/overview/"},
		{Label: "Accounts", Icon: "ph-users-three", Link: "/_/#/accounts/"},
		{Label: "Databases", Icon: "ph-database", Link: "/_/#/databases/"},
		{Label: "Runtime", Icon: "ph-code", Link: "/_/#/runtime/"},
		{Label: "Cron Jobs", Icon: "ph-clock", Link: "/_/#/crons/"},
		{Label: "File Manager", Icon: "ph-files", Link: "/_/#/file-manager/"},
		{Label: "Mappings", Icon: "ph-graph", Link: "/mappings/"},
		{Label: "SSL Certificate", Icon: "ph-lock", Link: "/_/#/ssl/"},
		{Label: "Marketplace", Icon: "ph-storefront", Link: "/_/#/marketplace/"},
		{Label: "Apps", Icon: "ph-circles-four", Link: ""},
		{Label: "Domains", Icon: "ph-globe", Link: ""},
		{Label: "Backups", Icon: "ph-cloud-arrow-up", Link: ""},
		{Label: "Web Servers", Icon: "ph-browsers", Link: ""},
		{Label: "Metrics", Icon: "ph-chart-bar", Link: ""},
		{Label: "Logs", Icon: "ph-log", Link: ""},
		{Label: "Image Optimizer", Icon: "ph-image-square", Link: ""},
		{Label: "Security", Icon: "ph-shield-checkered", Link: ""},
		{Label: "Terminal", Icon: "ph-terminal-window", Link: ""},
	}

	for itemIndex, item := range sidebarItems {
		if item.Link != currentUrl {
			continue
		}

		sidebarItems[itemIndex].AdditionalClasses = " text-speedia-500"
		break
	}

	return sidebarItems
}

templ Sidebar(currentUrl string) {
	<!-- Sidebar JavaScript -->
	<script defer type="text/javascript">
	function clearSession() {
		document.cookie = "os-access-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
		window.location.href = "/_/#/login";
	}
	function openSettings() {
		window.location.href = "/_/#/settings";
	}
    function scrollToTop() {
		const menu = document.getElementById("sidebarMenu");
		menu.scrollTo({ top: 0, behavior: 'smooth' });
	}
    function toggleScrollButton() {
		const menu = document.getElementById("sidebarMenu");
		const scrollButton = document.getElementById("scrollButton");
		if (menu.scrollTop > 0) {
			scrollButton.style.display = 'flex';
		} else {
			scrollButton.style.display = 'none';
		}
	}
	</script>
	<!-- Sidebar HTML -->
	<sidebar class="bg-os-900 flex h-screen w-24 flex-col items-center">
		<div class="my-7">
			<a
				href="/_/#/overview"
				class="mx-auto mb-2 flex w-[72px] max-w-[72px] items-center justify-center"
			>
				<img
					src="/assets/os-logo-dark.svg"
					alt="Speedia OS"
				/>
			</a>
			<p class="text-center text-xs">v{ infraEnvs.SpeediaOsVersion }</p>
		</div>
		<div class="inline-flex space-x-2">
			<div class="relative group">
				<button
					type="button"
					onclick="openSettings()"
					class="flex rounded-md border border-neutral-500 bg-transparent transition-all hover:border-transparent hover:bg-speedia-500 p-2"
				>
					<i class="ph-bold ph-gear text-base"></i>
				</button>
				<div class="absolute hidden bottom-full mb-2 transition-all  group-hover:block w-max p-2 bg-speedia-500 text-white text-xs rounded-md shadow-lg">
					Settings
				</div>
			</div>
			<div class="relative group">
				<button
					type="button"
					onclick="clearSession()"
					class="flex rounded-md border border-neutral-500 bg-transparent transition-all hover:border-transparent hover:bg-speedia-500 p-2"
				>
					<i class="ph-bold ph-sign-out text-base"></i>
				</button>
				<div class="absolute hidden bottom-full mb-2 transition-all group-hover:block w-max p-2 bg-speedia-500 text-white text-xs rounded-md shadow-lg">
					Logout
				</div>
			</div>
		</div>
		<button
			id="scrollButton"
			onclick="scrollToTop()"
			class="hidden rounded-full border border-neutral-500 bg-transparent transition-all hover:border-transparent hover:bg-speedia-500 p-2 mt-2"
		>
			<i class="ph-duotone ph-arrow-fat-up block"></i>
		</button>
		<div id="sidebarMenu" onscroll="toggleScrollButton()" class="mt-2 flex-1 w-full overflow-y-auto scrollbar-hide hover:scrollbar-show">
			<ul>
				for _, item := range sidebarItemsGetter(currentUrl) {
					if item.Link != "" {
						<li class={ "my-1 py-3 px-2 transition-all hover:bg-neutral-100 hover:bg-opacity-10" + item.AdditionalClasses }>
							<a href={ templ.URL(item.Link) }>
								<div class="mx-auto flex h-[48px] max-h-[48px] w-[48px] max-w-[48px] items-center justify-center rounded-full bg-neutral-950 bg-opacity-40 p-1">
									<i class={ "ph-duotone " + item.Icon + " block text-xl" }></i>
								</div>
								<div class="text-center text-sm">
									{ item.Label }
								</div>
							</a>
						</li>
					}
				}
			</ul>
		</div>
	</sidebar>
	<!-- Sidebar CSS -->
	<style>
        ::-webkit-scrollbar {
            width: 0;
            height: 0;
        }
    </style>
}
