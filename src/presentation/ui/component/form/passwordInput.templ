package componentForm

templ PasswordInput(
	id, label, bindValuePath string,
	denseMode bool,
) {
	<!-- PasswordInput -->
	<div class="relative w-full" x-data="{ isPasswordReadable: false }">
		<input
			x-bind:type="isPasswordReadable ? 'text' : 'password'"
			id={ id }
			name={ id }
			x-model:value={ bindValuePath }
			autocomplete="off"
			placeholder={ label }
			if denseMode {
				class="bg-os-300 border-os-200 hover:border-os-100 autofill:bg-os-300 focus:border-os-50 h-7.5 peer relative w-full rounded-md border px-1.5 text-[13px] text-neutral-100 placeholder-transparent outline-none transition-all"
			} else {
				class="bg-os-300 border-os-200 hover:border-os-100 autofill:bg-os-300 focus:border-os-50 peer relative h-10 w-full rounded-md border px-3 text-sm text-neutral-100 placeholder-transparent outline-none transition-all"
			}
		/>
		<div class="absolute right-2 top-1/2 -translate-y-1/2">
			<button class="bg-inherit mx-1 text-neutral-50 text-xl" @click="isPasswordReadable = !isPasswordReadable">
				<i class="ph-duotone ph-eye-slash" x-show="!isPasswordReadable"></i>
				<i class="ph-duotone ph-eye" x-show="isPasswordReadable"></i>
			</button>
		</div>
		<label
			for={ id }
			class="from-os-300 via-os-300 absolute -top-2 left-1.5 z-[1] cursor-text bg-gradient-to-t via-50% to-transparent to-50% px-1.5 text-xs font-bold text-neutral-50 text-opacity-80 transition-all before:absolute before:left-0 before:top-0 before:z-[-1] before:block before:h-full before:w-full before:bg-white before:transition-all peer-placeholder-shown:top-2.5 peer-placeholder-shown:text-sm peer-placeholder-shown:font-normal peer-autofill:-top-2 peer-hover:text-opacity-90 peer-focus:-top-2 peer-focus:cursor-default peer-focus:text-opacity-100"
		>
			{ label }
		</label>
	</div>
}
