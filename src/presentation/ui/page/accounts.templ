package page

import (
	"github.com/speedianet/os/src/domain/entity"
	componentForm "github.com/speedianet/os/src/presentation/ui/component/form"
	componentStructural "github.com/speedianet/os/src/presentation/ui/component/structural"
)

script AccountsIndexLocalState() {
    document.addEventListener('alpine:init', () => {
		Alpine.data('accounts', () => ({
			// Primary states
			account: {},
			resetPrimaryStates() {
				this.account = {
					id: '',
					groupId: '',
					username: '',
					password: '',
				}
			},
			init() {
				this.resetPrimaryStates();
			},

			// Auxiliary states
			get shouldDisableUpdatePasswordSubmitButton() {
				if (this.account.password == "") {
					return true;
				}

				return this.account.password.length < 6 || this.account.password.length > 64;
			},
			updateApiKey() {
				console.log('Update API key');
			},
			deleteAccount() {
				console.log('Delete account');
			},

			// Modal states
			isUpdatePasswordModalOpen: false,
			openUpdatePasswordModal(id) {
				this.resetPrimaryStates();

				this.account.id = id;
				this.isUpdatePasswordModalOpen = true;
			},
			closeUpdatePasswordModal() {
				this.isUpdatePasswordModalOpen = false;
			},
		}))
	})
}

templ AccountsIndex(accounts []entity.Account) {
	@AccountsIndexLocalState()
	<div x-data="accounts">
		<div class="mb-6 flex flex-row items-center justify-between">
			<div class="basis-[70%]">
				@componentStructural.PageTitle(
					"Accounts",
					"",
					"ph-users-three",
				)
			</div>
		</div>
		<div
			id="accounts-page-content"
			hx-get="/accounts/"
			hx-trigger="submit from:form delay:500ms, click from:button#delete-element delay:500ms"
			hx-select="#accounts-page-content"
			hx-target="#accounts-page-content"
			hx-swap="outerHTML transition:true"
			class="flex flex-col"
		>
			<div id="accounts-table" class="card w-full">
				@AccountsTable(accounts)
			</div>
		</div>
		@UpdatePasswordModal()
	</div>
}

templ AccountsTable(accounts []entity.Account) {
	<table class="w-full table-auto border-collapse rounded-md transition-all duration-300 ease-in-out">
		<thead class="bg-os-800 text-xs uppercase text-neutral-400">
			<tr class="border-b border-neutral-500 border-opacity-90 text-center">
				<th scope="col" class="w-2/7 px-5 py-3 text-left">Username(s)</th>
				<th scope="col" class="w-2/7 px-5 py-3 text-center">UserId(s)/GroupId(s)</th>
				<th scope="col" class="flex justify-end py-3">
					<div class="w-3/7">
						@componentForm.SubmitButton(
							"create-account-button", "Create account", "ph-user-plus",
							"", false,
						)
					</div>
				</th>
			</tr>
		</thead>
		<tbody>
			for _, account := range accounts {
				<tr class="odd:bg-os-300 even:bg-os-500 border-b border-neutral-500 border-opacity-30 text-center">
					<th scope="row" class="w-1/4 px-5 py-3 text-left font-normal">{ account.Username.String() }</th>
					<th scope="row" class="w-1/4 px-5 py-3 text-center font-normal">{ account.Id.String() + "/" + account.GroupId.String() }</th>
					<th scope="row" class="w-1/4 px-5 py-3 text-right">
						<div class="inline-flex space-x-2">
							@componentStructural.CircularIconButtonWithTooltip(
								"ph-lock-key", "blue-900", "blue-700",
								"openUpdatePasswordModal("+account.Id.String()+")",
								"update password", "blue-500",
							)
							@componentStructural.CircularIconButtonWithTooltip(
								"ph-key", "blue-900", "blue-700", "updateApiKey()",
								"update API key", "blue-500",
							)
							@componentStructural.CircularIconButtonWithTooltip(
								"ph-trash", "red-800", "red-600", "deleteAccount()",
								"delete account", "red-500",
							)
						</div>
					</th>
				</tr>
			}
		</tbody>
	</table>
}

templ UpdatePasswordForm() {
	<form
		hx-put="/api/v1/account/"
		hx-indicator="#loading-overlay"
		hx-swap="none"
	>
		<div class="mb-6">
			<input type="hidden" name="id" x-bind:value="account.id"/>
			@componentForm.PasswordInput("password", "Password", "account.password", false)
			<p class="bg-os-800 px-4 py-3 mt-2 rounded-md text-sm">Must be at least 6 characters long and no more than 64.</p>
		</div>
		@componentForm.DeactivatableSubmitButton(
			"Create", "ph-key", "closeUpdatePasswordModal()",
			"shouldDisableUpdatePasswordSubmitButton", false,
		)
	</form>
}

templ UpdatePasswordModal() {
	@componentStructural.Modal(
		"Update Password", "isUpdatePasswordModalOpen", "closeUpdatePasswordModal()",
		"account.id",
	) {
		@UpdatePasswordForm()
	}
}
